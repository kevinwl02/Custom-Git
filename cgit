#!/usr/bin/env ruby

require 'Thor'

class CGit < Thor
	desc "put MESSAGE", "Adds, commits with a MESSAGE and pushes the current HEAD"
	method_option :remote, :aliases => "-r", :desc => "Applies this to the current HEAD"
	def put(message)
		system ("git add --a .")
		system ("git commit -m \"#{message}\"")

		remote = options[:remote]
		if remote
			system ("git push origin HEAD")
		end
	end

	desc "uncommit", "Undoes a commit to the previous HEAD, while keeping the changes"
	def uncommit
		system ("git reset --soft HEAD^")
	end

	desc "retip COMMIT", "Moves the TIP of the current branch"
	method_option :remote, :aliases => "-r", :desc => "Applies this to the current HEAD"
	def retip(commit)
		system ("git reset --hard #{commit}")

		remote = options[:remote]
		if remote
			system ("git push origin HEAD --force")
		end
	end

	desc "commits", "Displays the commit history tree for the current branch"
	def commits
		system ("git symbolic-ref --short HEAD & 
			git log --pretty=format:\"%h %s\" --graph")
	end
end

CGit.start